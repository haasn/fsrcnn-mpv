## gen.hs

This generates the shader files, based on weights exported by FSRCNN-TensorFlow

## FSRCNN-n.glsl

A proof-of-concept, using a “nano”-trained net (s,d,m) = (4,2,1), made only for
the purposes of testing out the math. Seems to work (?)

## FSRCNN-n2.glsl

Same as FSRCNN-n.glsl, but generated by gen.hs instead of hand-written.

## FSRCNN-m.glsl (WIP)

A larger network, tuned to the limitations of mpv. (s,d,m) = (24,4,2), picked
because mpv only allows 6 textures unit (6*4 = 24), and because 4 components fit
into a single texture (unlike 5).

Seems to be broken for some reason I can't seem to figure out. I double and
triple checked the math, but the resulting images exhibit bad corruption.
Suggestions welcome.
